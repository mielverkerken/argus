# 
#  Argus Software
#  Copyright (c) 2000-2020 QoSient, LLC
#  All rights reserved.
# 
#  THE ACCOMPANYING PROGRAM IS PROPRIETARY SOFTWARE OF QoSIENT, LLC,
#  AND CANNOT BE USED, DISTRIBUTED, COPIED OR MODIFIED WITHOUT
#  EXPRESS PERMISSION OF QoSIENT, LLC.
# 
#  QOSIENT, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
#  SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
#  AND FITNESS, IN NO EVENT SHALL QOSIENT, LLC BE LIABLE FOR ANY
#  SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
#  IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
#  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
#  THIS SOFTWARE.
# 
#  Written by Carter Bullard
#  QoSient, LLC
# 
# Various configurable paths (remember to edit Makefile.in, not Makefile)

# Top level hierarchy

prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@

# Pathname of directory to install the system binaries
SBINDIR = @sbindir@
# Pathname of directory to install the system binaries
BINDIR = @bindir@
# Pathname of directory to install the include files
INCLDEST = @includedir@
# Pathname of directory to install the library
LIBDEST =  @libdir@
# Pathname of directory to install the man page
MANDEST = @mandir@

# VPATH
srcdir = @srcdir@
VPATH = @srcdir@

COMPATLIB = @COMPATLIB@
WRAPLIBS = @WRAPLIBS@
SASLLIBS = @LIB_SASL@
XDRLIBS  = @LIB_XDR@

#
# You shouldn't need to edit anything below.
#

CC = @CC@
CCOPT = @V_CCOPT@
INCLS = -I$(srcdir) @V_INCLS@ -I$(srcdir)/../include 
DEFS = @DEFS@
#DEFS = -DARGUSPERFMETRICS=1 @DEFS@

FLEXLM = @V_FLEXLM@
FLEXLM_ARCH = @V_FLEXLM_ARCH@
FLEXLM_ARCH_universal_mac10_LIBS = -framework IOKit -framework CoreFoundation
FLEXLM_ARCH_x64_lsb_LIBS = -ldl
FLEXLM_ARCH_i86_n3_LIBS =
ifneq ($(FLEXLM),)
    FLEXLM_LDFLAGS = -L$(FLEXLM)/$(FLEXLM_ARCH) -L$(FLEXLM)/$(FLEXLM_ARCH)/activation/lib
       FLEXLM_LIBS = -llmgr_trl -lcrvs -lsb -llmgr_dongle_stub -lnoact $(FLEXLM_ARCH_$(FLEXLM_ARCH)_LIBS)
     FLEXLM_CFLAGS = -I$(FLEXLM)/$(FLEXLM_ARCH) -I$(FLEXLM)/machind
endif


# Standard CFLAGS
CFLAGS = $(CCOPT) $(INCLS) $(DEFS) $(EXTRA_CFLAGS) $(FLEXLM_CFLAGS)
LDFLAGS = @LDFLAGS@ $(FLEXLM_LDFLAGS)

INSTALL = @INSTALL@
RANLIB = @V_RANLIB@

#
# Flex and bison allow you to specify the prefixes of the global symbols
# used by the generated parser.  This allows programs to use lex/yacc
# and link against libpcap.  If you don't have flex or bison, get them.
#
LEX = @V_LEX@
YACC = @V_YACC@

# Explicitly define compilation rule since SunOS 4's make doesn't like gcc.
# Also, gcc does not remove the .o before forking 'as', which can be a
# problem if you don't own the file but can write to the directory.
.c.o:
	@rm -f $@
	$(CC) $(CFLAGS) -c $<

SRC =	argus.c ArgusModeler.c ArgusSource.c ArgusUtil.c ArgusOutput.c ArgusUdp.c \
	ArgusTcp.c ArgusIcmp.c ArgusIgmp.c ArgusEsp.c ArgusArp.c ArgusFrag.c ArgusUdt.c \
	ArgusLcp.c ArgusIsis.c ArgusAuth.c Argus802.11.c ArgusApp.c ArgusEvents.c \
	ArgusNetflow.c ArgusSflow.c ArgusVxLan.c

PROG =	@INSTALL_BIN@/argus

# We would like to say "OBJ = $(SRC:.c=.o)" but Ultrix's make cannot
# hack the extra indirection

OBJ =	$(SRC:.c=.o)

LIB = @LIBS@ @V_THREADS@ $(WRAPLIBS) $(SASLLIBS) $(COMPATLIB) ../lib/argus_common.a $(XDRLIBS)

HDR =	pcap.h pcap-int.h pcap-namedb.h pcap-nit.h pcap-pf.h \
	ethertype.h gencode.h gnuc.h

TAGHDR = \
	pcap/bpf.h

TAGFILES = \
	$(SRC) $(HDR) $(TAGHDR)

CLEANFILES = $(OBJ) $(PROG)

all: $(PROG)

@INSTALL_BIN@/argus: $(OBJ) ../lib/argus_common.a
	$(CC) $(CFLAGS) -o $@ $(OBJ) $(LDFLAGS) $(LIB)

$(FLEXLM)/$(FLEXLM_ARCH)/lm_new.o:
	$(MAKE) -C $(FLEXLM)/$(FLEXLM_ARCH) lm_new.o

install: force all
	[ -d $(DESTDIR)$(SBINDIR) ] || \
		(mkdir -p $(DESTDIR)$(SBINDIR); chmod 755 $(DESTDIR)$(SBINDIR))
	$(INSTALL) $(srcdir)/../bin/argus $(DESTDIR)$(SBINDIR)/argus

uninstall: force
	rm -f $(DESTDIR)$(SBINDIR)/argus

clean:
	rm -f $(CLEANFILES)

distclean:
	rm -f $(CLEANFILES) Makefile config.cache config.log config.status \
	    gnuc.h os-proto.h bpf_filter.c net

tags: $(TAGFILES)
	ctags -wtd $(TAGFILES)

tar:	force
	@cwd=`pwd` ; dir=`basename $$cwd` ; name=libpcap-`cat VERSION` ; \
	    list="" ; tar="tar chFFf" ; \
	    for i in `cat FILES` ; do list="$$list $$name/$$i" ; done; \
	    echo \
	    "rm -f ../$$name; ln -s $$dir ../$$name" ; \
	     rm -f ../$$name; ln -s $$dir ../$$name ; \
	    echo \
	    "(cd .. ; $$tar - [lots of files]) | compress > /tmp/$$name.tar.Z" ; \
	     (cd .. ; $$tar - $$list) | compress > /tmp/$$name.tar.Z ; \
	    echo \
	    "rm -f ../$$name" ; \
	     rm -f ../$$name

force:	/tmp
depend:	force
	../bin/mkdep -c $(CC) $(DEFS) $(INCLS) $(SRC)
